---
export interface Props {
  title: string;
  description: string;
  image?: string;
}

const { title, description, image = '/optimized/ecd9fbaa-bfef-4db6-82c4-9041166d934a.jpg' } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!DOCTYPE html>
<html lang="en">
<head>
  <!-- Essential Meta -->
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{title}</title>
  <meta name="description" content={description}>
  <link rel="canonical" href={canonicalURL}>
  
  <!-- Preconnect -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  
  <!-- Fonts - Only load weights we use -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Playfair+Display:wght@700&display=swap" rel="stylesheet">
  
  <!-- Favicon -->
  <link rel="icon" href="/favicon.ico">
  <link rel="apple-touch-icon" href={image}>
  
  <!-- Open Graph -->
  <meta property="og:type" content="website">
  <meta property="og:url" content={canonicalURL}>
  <meta property="og:title" content={title}>
  <meta property="og:description" content={description}>
  <meta property="og:image" content={new URL(image, Astro.site)}>
  <meta property="og:site_name" content="Dave Shapiro SEO Expert">
  
  <!-- Twitter -->
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:title" content={title}>
  <meta name="twitter:description" content={description}>
  <meta name="twitter:image" content={new URL(image, Astro.site)}>
  
  <!-- Critical CSS - Inline for instant render -->
  <style>
    /* Only above-the-fold critical styles */
    :root{--cream:#f4e3c2;--blue:#1d4e89;--white:#fff}
    *{box-sizing:border-box;margin:0;padding:0}
    body{font-family:Inter,-apple-system,sans-serif;color:var(--blue);background:var(--cream)}
    .hero{min-height:100vh;display:flex;align-items:center;background:linear-gradient(135deg,var(--blue) 0%,#0f2e54 100%);color:var(--white)}
    .container{max-width:1200px;margin:0 auto;padding:0 1.5rem}
    h1{font-family:'Playfair Display',serif;font-size:clamp(2rem,5vw,3.5rem);line-height:1.2;margin-bottom:1rem}
  </style>
  
  <!-- Non-critical CSS -->
  <link rel="stylesheet" href="/src/styles/global-complete.css">
  
  <!-- Minimal JS for interactions -->
  <script>
    // Mobile menu toggle
    document.addEventListener('DOMContentLoaded', () => {
      const menuBtn = document.getElementById('menu-btn');
      const mobileMenu = document.getElementById('mobile-menu');
      
      if (menuBtn && mobileMenu) {
        menuBtn.addEventListener('click', () => {
          mobileMenu.classList.toggle('active');
          menuBtn.setAttribute('aria-expanded', 
            menuBtn.getAttribute('aria-expanded') === 'true' ? 'false' : 'true'
          );
        });
      }
      
      // Intersection Observer for fade-ins
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('visible');
          }
        });
      }, { threshold: 0.1 });
      
      document.querySelectorAll('.fade-in').forEach(el => observer.observe(el));
      
      // Smooth scroll for anchor links
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', (e) => {
          e.preventDefault();
          const target = document.querySelector(anchor.getAttribute('href'));
          if (target) {
            target.scrollIntoView({ behavior: 'smooth', block: 'start' });
          }
        });
      });
    });
  </script>
  
  <!-- Google Analytics -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=G-LV8CDB9W9E"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'G-LV8CDB9W9E');
  </script>
</head>
<body>
  <slot />
</body>
</html>